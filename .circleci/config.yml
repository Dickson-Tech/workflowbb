version: 2.1

jobs:
  deployment-and-api-tests:
    docker:
      - image: cimg/node:18.10.0

    steps:
      - checkout

      - run: node --version
      - run: sudo corepack enable

      - run:
          name: Install Docker Compose
          environment:
            COMPOSE_VERSION: '1.29.2'
          command: |
            curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.12

      - run:
          name: 'Intro'
          command:
            'echo testing all examples in /examples against test suite in /test'

      - run:
          name: Build test image
          command: |
            cd ./test/
            docker build . -t test:latest

      # TODO: Recurse through these ============================================
      - run:
          name: 'Test n8n deployment via docker and a GovStack adaptor'
          command: 'cd examples/n8n && ./test_entrypoint.sh'

      - run:
          name: Wait for service to be alive
          command: |
            # In this example, we have a "contacts" service, and
            # we are trying to check, via `dockerize`, if the service is ready.
            docker container run --network mock_web \
              docker.io/jwilder/dockerize \
              -wait tcp://caddy:80 \
              -wait-retry-interval 2s \
              -timeout 20s
      - run:
          name: Run Gherkin tests
          command: |
            docker container run --network mock_web test:latest

      - run:
          name: 'Run cucumber tests against n8n image'
          command: cd test && yarn install && yarn run test

      - run:
          name: 'Shut down n8n'
          command: 'cd examples/n8n && docker compose down'
      # ========================================================================

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  building-block-test:
    jobs:
      - deployment-and-api-tests
